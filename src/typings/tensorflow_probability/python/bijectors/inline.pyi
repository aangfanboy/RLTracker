"""
This type stub file was generated by pyright.
"""

from tensorflow_probability.python.bijectors import bijector

"""Inline bijector."""
__all__ = ['Inline']
class Inline(bijector.AutoCompositeTensorBijector):
  """Bijector constructed from custom callables.

  Example Use:

  ```python
  exp = Inline(
      forward_fn=tf.exp,
      inverse_fn=tf.math.log,
      inverse_log_det_jacobian_fn=lambda y: -tf.math.log(y),
      forward_min_event_ndims=0,
      is_increasing=True,
      name='exp')
  ```

  The above example is equivalent to the `Bijector` `Exp()`.
  """
  def __init__(self, forward_fn=..., inverse_fn=..., inverse_log_det_jacobian_fn=..., forward_log_det_jacobian_fn=..., forward_event_shape_fn=..., forward_event_shape_tensor_fn=..., inverse_event_shape_fn=..., inverse_event_shape_tensor_fn=..., is_constant_jacobian=..., is_increasing=..., validate_args=..., forward_min_event_ndims=..., inverse_min_event_ndims=..., name=...) -> None:
    """Creates a `Bijector` from callables.

    At the minimum, you must supply one of `forward_min_event_ndims` or
    `inverse_min_event_ndims`. To be fully functional, a typical bijector will
    also require `forward_fn`, `inverse_fn` and at least one of
    `inverse_log_det_jacobian_fn` or `forward_log_det_jacobian_fn`.

    Args:
      forward_fn: Python callable implementing the forward transformation.
      inverse_fn: Python callable implementing the inverse transformation.
      inverse_log_det_jacobian_fn: Python callable implementing the
        `log o det o jacobian` of the inverse transformation.
      forward_log_det_jacobian_fn: Python callable implementing the
        `log o det o jacobian` of the forward transformation.
      forward_event_shape_fn: Python callable implementing non-identical
        static event shape changes. Default: shape is assumed unchanged.
      forward_event_shape_tensor_fn: Python callable implementing non-identical
        event shape changes. Default: shape is assumed unchanged.
      inverse_event_shape_fn: Python callable implementing non-identical
        static event shape changes. Default: shape is assumed unchanged.
      inverse_event_shape_tensor_fn: Python callable implementing non-identical
        event shape changes. Default: shape is assumed unchanged.
      is_constant_jacobian: Python `bool` indicating that the Jacobian is
        constant for all input arguments.
      is_increasing: `bool` `Tensor` indicating a scalar bijector function is
        increasing for all input arguments, or a callable returning a `bool`
        `Tensor` specifying such truth values.
      validate_args: Python `bool` indicating whether arguments should be
        checked for correctness.
      forward_min_event_ndims: Python `int` indicating the minimal
        dimensionality this bijector acts on.
      inverse_min_event_ndims: Python `int` indicating the minimal
        dimensionality this bijector acts on.
      name: Python `str`, name given to ops managed by this object.

    Raises:
      TypeError: If any of the non-`None` `*_fn` arguments are not callable.
    """
    ...
  


