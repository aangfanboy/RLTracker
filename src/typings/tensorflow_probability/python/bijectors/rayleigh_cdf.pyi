"""
This type stub file was generated by pyright.
"""

from tensorflow_probability.python.bijectors import bijector

"""RayleighCDF bijector."""
__all__ = ['RayleighCDF']
class RayleighCDF(bijector.CoordinatewiseBijectorMixin, bijector.AutoCompositeTensorBijector):
  """Compute `Y = g(X) = 1 - exp( -(X/scale)**2 / 2 ), X >= 0`.

  This bijector maps inputs from `[0, inf]` to `[0, 1]`. The inverse of the
  bijector applied to a uniform random variable `X ~ U(0, 1)` gives back a
  random variable with the
  [Rayleigh distribution](https://en.wikipedia.org/wiki/Rayleigh_distribution):

  ```none
  Y ~ Rayleigh(scale)
  pdf(y; scale, y >= 0) =
      (1 / scale) * (y / scale) *
      exp(-(y / scale)**2 / 2)
  ```

  Likwewise, the forward of this bijector is the Rayleigh distribution CDF.
  """
  def __init__(self, scale=..., validate_args=..., name=...) -> None:
    """Instantiates the `RayleighCDF` bijector.

    Args:
      scale: Positive Float-type `Tensor`.
        This is `l` in `Y = g(X) = 1 - exp( -(X/l)**2 / 2 ), X >= 0`.
      validate_args: Python `bool` indicating whether arguments should be
        checked for correctness.
      name: Python `str` name given to ops managed by this object.
    """
    ...
  
  @property
  def scale(self):
    ...
  


