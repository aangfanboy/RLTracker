"""
This type stub file was generated by pyright.
"""

from tensorflow_probability.python.bijectors import bijector, invert

"""Expm1 bijector."""
__all__ = ['Log1p', 'Expm1']
class Expm1(bijector.CoordinatewiseBijectorMixin, bijector.AutoCompositeTensorBijector):
  """Compute `Y = g(X) = exp(X) - 1`.

    This `Bijector` is no different from Chain([Shift(-1), Exp()]).

    However, this makes use of the more numerically stable routines
    `tf.math.expm1` and `tf.log1p`.

    Example Use:

    ```python
    # Create the Y=g(X)=expm1(X) transform.
    expm1 = Expm1()
    x = [[[1., 2],
           [3, 4]],
          [[5, 6],
           [7, 8]]]
    expm1(x) == expm1.forward(x)
    log1p(x) == expm1.inverse(x)
    ```

    Note: the expm1(.) is applied element-wise but the Jacobian is a reduction
    over the event space.
  """
  def __init__(self, validate_args=..., name=...) -> None:
    ...
  


class Log1p(bijector.CoordinatewiseBijectorMixin, invert.Invert):
  """Compute `Y = log1p(X)`. This is `Invert(Expm1())`."""
  def __init__(self, validate_args=..., name=...) -> None:
    ...
  


