"""
This type stub file was generated by pyright.
"""

from tensorflow_probability.python.bijectors import bijector as bijector_lib, invert, power_transform

"""Exp bijector."""
__all__ = ['Exp', 'Log']
class Exp(power_transform.PowerTransform):
  """Compute `Y = g(X) = exp(X)`.

    Example Use:

    ```python
    # Create the Y=g(X)=exp(X) transform which works only on Tensors with 1
    # batch ndim 2.
    exp = Exp()
    x = [[[1., 2],
           [3, 4]],
          [[5, 6],
           [7, 8]]]
    exp(x) == exp.forward(x)
    log(x) == exp.inverse(x)
    ```

    Note: the exp(.) is applied element-wise but the Jacobian is a reduction
    over the event space.
  """
  def __init__(self, validate_args=..., name=...) -> None:
    """Instantiates the `Exp` bijector.

    Args:
      validate_args: Python `bool` indicating whether arguments should be
        checked for correctness.
      name: Python `str` name given to ops managed by this object.
    """
    ...
  


class Log(bijector_lib.CoordinatewiseBijectorMixin, invert.Invert):
  """Compute `Y = log(X)`. This is `Invert(Exp())`."""
  def __init__(self, validate_args=..., name=...) -> None:
    ...
  


