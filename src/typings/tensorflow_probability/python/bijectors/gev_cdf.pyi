"""
This type stub file was generated by pyright.
"""

from tensorflow_probability.python.bijectors import bijector

"""GeneralizedExtremeValue bijector."""
__all__ = ['GeneralizedExtremeValueCDF']
class GeneralizedExtremeValueCDF(bijector.CoordinatewiseBijectorMixin, bijector.AutoCompositeTensorBijector):
  """Compute the GeneralizedExtremeValue CDF.

  Compute `Y = g(X) = exp(-t(X))`,

  where `t(x)` is defined to be:
    *`(1 + conc * (x - loc) / scale) ) ** (-1 / conc)` when `conc != 0`;
    *`exp(-(x - loc) / scale)` when `conc = 0`.

  This bijector maps inputs from the domain to `[0, 1]`, where the domain is
    * [loc - scale/conc, inf) when conc > 0;
    * (-inf, loc - scale/conc] when conc < 0;
    * (-inf, inf) when conc = 0;



  The inverse of the bijector applied to a uniform random variable
  `X ~ U(0, 1)` gives back a random variable with the
  [Generalized extreme value distribution](
  https://https://en.wikipedia.org/wiki/Generalized_extreme_value_distribution):

  When `concentration -> +-inf`, the probability mass concentrates near `loc`.

  ```none
  Y ~ GeneralizedExtremeValueCDF(loc, scale, conc)
  pdf(y; loc, scale, conc) = t(y; loc, scale, conc) ** (1 + conc) * exp(
  - t(y; loc, scale, conc) ) / scale
  where t(x) =
    * (1 + conc * (x - loc) / scale) ) ** (-1 / conc) when conc != 0;
    * exp(-(x - loc) / scale) when conc = 0.
  ```
  """
  def __init__(self, loc=..., scale=..., concentration=..., validate_args=..., name=...) -> None:
    """Instantiates the `GeneralizedExtremeValueCDF` bijector.

    Args:
      loc: Float-like `Tensor` that is the same dtype and is broadcastable with
        `scale` and `concentration`.
      scale: Positive Float-like `Tensor` that is the same dtype and is
        broadcastable with `loc` and `concentration`.
      concentration: Nonzero float-like `Tensor` that is the same dtype and is
        broadcastable with `loc` and `scale`.
      validate_args: Python `bool` indicating whether arguments should be
        checked for correctness.
      name: Python `str` name given to ops managed by this object.
    """
    ...
  
  @property
  def loc(self):
    """The location parameter in the Generalized Extreme Value CDF."""
    ...
  
  @property
  def scale(self):
    """The scale parameter in the Generalized Extreme Value CDF."""
    ...
  
  @property
  def concentration(self):
    """The concentration parameter in the Generalized Extreme Value CDF."""
    ...
  


