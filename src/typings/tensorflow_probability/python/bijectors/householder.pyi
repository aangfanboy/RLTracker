"""
This type stub file was generated by pyright.
"""

from tensorflow_probability.python.bijectors import bijector

"""Householder bijector."""
__all__ = ['Householder']
class Householder(bijector.AutoCompositeTensorBijector):
  """Compute the reflection of a vector across a hyperplane.

  The reflection of x across the hyperplane with unit normal vector `v`
  (the `reflection_axis`) is `x - 2 * <x, v> * v`.


  #### Examples

  ```python
  householder = tfp.bijectors.Householder(reflection_axis = [-0.8, 0.6])
  x = [1.0, 0.0]
  householder.forward(x)  # [-0.28, 0.96]
  ```

  **Note:** The norm of `reflection_axis` should be 1. If the norm
  is less than 1e-6, results may not be accurate.
  """
  def __init__(self, reflection_axis, validate_args=..., name=...) -> None:
    """Instantiates the `Householder` bijector.

    Args:
      reflection_axis: Vector normal to the reflection hyperplane.
      validate_args: Python `bool` indicating whether arguments should be
        checked for correctness.
      name: Python `str` name given to ops managed by this object.
    """
    ...
  
  @property
  def reflection_axis(self):
    ...
  


