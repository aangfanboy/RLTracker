"""
This type stub file was generated by pyright.
"""

from tensorflow_probability.python.bijectors import bijector

"""A `Bijector` that computes `b(x) = 1. / x`."""
__all__ = ['Reciprocal']
class Reciprocal(bijector.CoordinatewiseBijectorMixin, bijector.AutoCompositeTensorBijector):
  """A `Bijector` that computes the reciprocal `b(x) = 1. / x` entrywise.

  This bijector accepts any non-zero values for both `forward` and `inverse`.

  #### Examples

  ```python
  bijector.Reciprocal().forward(x=[[1., 2.], [4., 5.]])
  # Result: [[1., .5], [.25, .2]], i.e., 1 / x

  bijector.Reciprocal().forward(x=[[0., 2.], [4., 5.]])
  # Result: AssertionError, doesn't accept zero.

  bijector.Square().inverse(y=[[1., 2.], [4., 5.]])
  # Result: [[1., .5], [.25, .2]], i.e. 1 / x

  ```
  """
  def __init__(self, validate_args=..., name=...) -> None:
    """Instantiates the `Reciprocal`.

    Args:
      validate_args: Python `bool` indicating whether arguments should be
        checked for correctness.
      name: Python `str` name given to ops managed by this object.
    """
    ...
  
  _inverse = ...
  _inverse_log_det_jacobian = ...


