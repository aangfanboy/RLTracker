"""
This type stub file was generated by pyright.
"""

from tensorflow_probability.python.internal import tf_keras

"""Keras initializers useful for TFP Keras layers."""
class BlockwiseInitializer(tf_keras.initializers.Initializer):
  """Initializer which concats other intializers."""
  def __init__(self, initializers, sizes, validate_args=...) -> None:
    """Creates the `BlockwiseInitializer`.

    Args:
      initializers: `list` of Keras initializers, e.g., `"glorot_uniform"` or
        `tf_keras.initializers.Constant(0.5413)`.
      sizes: `list` of `int` scalars representing the number of elements
        associated with each initializer in `initializers`.
      validate_args: Python `bool` indicating we should do (possibly expensive)
        graph-time assertions, if necessary.
    """
    ...
  
  @property
  def initializers(self): # -> Any:
    ...
  
  @property
  def sizes(self): # -> Any:
    ...
  
  @property
  def validate_args(self): # -> bool:
    ...
  
  def __call__(self, shape, dtype=...):
    """Returns a tensor object initialized as specified by the initializer.

    Args:
      shape: Shape of the tensor.
      dtype: Optional dtype of the tensor. If not provided will return tensor
       of `tf.float32`.
    """
    ...
  
  def get_config(self): # -> dict[str, Any]:
    """Returns initializer configuration as a JSON-serializable dict."""
    ...
  
  @classmethod
  def from_config(cls, config): # -> Self:
    """Instantiates an initializer from a configuration dictionary."""
    ...
  


