"""
This type stub file was generated by pyright.
"""

import types

"""Helper functions for numpy backend."""
can_copy_docstring = ...
__all__ = ['common_dtype', 'copy_docstring', 'numpy_dtype', 'try_import']
def copy_docstring(tf_method_name, new_fn):
  """Wraps new_fn with the doc of original_fn if TensorFlow can be imported."""
  ...

def numpy_dtype(dtype): # -> None:
  ...

def common_dtype(args_list, dtype_hint=...): # -> None:
  """Returns explict dtype from `args_list` if exists, else dtype_hint."""
  ...

def is_complex(dtype): # -> bool:
  """Returns whether this is a complex floating point type."""
  ...

class _FakeModule(types.ModuleType):
  """Dummy module which raises `NotImplementedError` on `getattr` access."""
  def __init__(self, name, doc) -> None:
    ...
  
  def __dir__(self): # -> list[Any]:
    ...
  
  def __getattr__(self, attr):
    ...
  


def try_import(name): # -> ModuleType | _FakeModule:
  ...

def partial(f, *args, **kwargs): # -> Callable[..., Any]:
  """Wraps `functools.partial` to return a function rather than an object."""
  ...

