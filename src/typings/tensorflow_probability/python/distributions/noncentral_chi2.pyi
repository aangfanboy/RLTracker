"""
This type stub file was generated by pyright.
"""

from tensorflow_probability.python.distributions import distribution

"""The noncentral Chi2 distribution class."""
__all__ = ['NoncentralChi2']
class NoncentralChi2(distribution.AutoCompositeTensorDistribution):
  """Noncentral Chi2 distribution.

  The Noncentral Chi2 distribution is defined over positive real numbers using a
  degrees of freedom ('df') and a noncentrality parameter.

  The Noncentral Chi2 arises as the distribution of the squared Euclidean norm
  of a 'df'-dimensional multivariate Gaussian distribution with mean vector
  'mu' and identity covariance. The noncentrality parameter is given by the
  squared Euclidean norm of the mean vector 'mu'.

  #### Mathematical Details

  The probability density function (pdf) is

  ```none
  pdf(x; df, nc, x > 0)
    = 0.5 * (x/nc)**(df/4 - 1/2) * exp(-(x + nc)/2) * I_{k/2 - 1}(sqrt(nc * x))
  ```

  where:

  * `df` denotes the degrees of freedom,
  * `nc` denotes the noncentrality
  * `I_{a}` is the modified Bessel function of the first kind of order `a`.
  """
  def __init__(self, df, noncentrality, validate_args=..., allow_nan_stats=..., name=...) -> None:
    """Construct noncentral Chi2 distributions with parameter `df` and `noncentrality`.

    Args:
      df: Floating point tensor, the degrees of freedom of the distribution(s).
        `df` must contain only positive values.
      noncentrality: Floating point tensor, the noncentrality of the
        distribution(s). `noncentrality` must contain only positive values.
      validate_args: Python `bool`, default `False`. When `True` distribution
        parameters are checked for validity despite possibly degrading runtime
        performance. When `False` invalid inputs may silently render incorrect
        outputs.
      allow_nan_stats: Python `bool`, default `True`. When `True`, statistics
        (e.g., mean, mode, variance) use the value '`NaN`' to indicate the
        result is undefined. When `False`, an exception is raised if one or more
        of the statistic's batch members are undefined.
      name: Python `str` name prefixed to Ops created by this class.
    """
    ...
  
  @property
  def df(self):
    """Returns the degrees of freedom of the distribution."""
    ...
  
  @property
  def noncentrality(self):
    """Returns the noncentrality of the distribution."""
    ...
  
  def quantile_approx(self, value, tol=...):
    """Approximates the quantile function of a noncentral X2 random variable by numerically inverting its CDF.

    Args:
      value: `tf.Tensor` of locations at which to invert the CDF.
      tol: Optional `tf.Tensor` that specifies the error tolerance of the root
      finding algorithm. Note, that the shape of `tol` must broadcast with
      `value`. If `None` is given, then the tolerance is set to the machine
      epsilon of the distribution's dtype. Defaults to `None`.

    Returns:
      `tf.Tensor` of approximate quantile values.
    """
    ...
  


