"""
This type stub file was generated by pyright.
"""

from tensorflow_probability.python.distributions import transformed_distribution

"""LogNormal distribution classes."""
__all__ = ['LogNormal']
class LogNormal(transformed_distribution.TransformedDistribution):
  """The log-normal distribution."""
  def __init__(self, loc, scale, validate_args=..., allow_nan_stats=..., name=...) -> None:
    """Construct a log-normal distribution.

    The LogNormal distribution models positive-valued random variables
    whose logarithm is normally distributed with mean `loc` and
    standard deviation `scale`. It is constructed as the exponential
    transformation of a Normal distribution.

    Args:
      loc: Floating-point `Tensor`; the means of the underlying
        Normal distribution(s).
      scale: Floating-point `Tensor`; the stddevs of the underlying
        Normal distribution(s).
      validate_args: Python `bool`, default `False`. Whether to validate input
        with asserts. If `validate_args` is `False`, and the inputs are
        invalid, correct behavior is not guaranteed.
      allow_nan_stats: Python `bool`, default `True`. If `False`, raise an
        exception if a statistic (e.g. mean/mode/etc...) is undefined for any
        batch member If `True`, batch members with valid parameters leading to
        undefined statistics will return NaN for this statistic.
      name: The name to give Ops created by the initializer.
    """
    ...
  
  @property
  def loc(self):
    """Distribution parameter for the pre-transformed mean."""
    ...
  
  @property
  def scale(self):
    """Distribution parameter for the pre-transformed standard deviation."""
    ...
  
  experimental_is_sharded = ...
  @classmethod
  def experimental_from_mean_variance(cls, mean, variance, **kwargs): # -> Self:
    """Constructs a LogNormal from its mean and variance.

    **Experimental: Naming, location of this API may change.**

    Args:
      mean: The mean of the constructed distribution. Must be greater than 0.
      variance: The variance of the distribution. Must be greater than 0.
      **kwargs: Other keyword arguments passed directly to `__init__`, e.g.
        `validate_args`.

    Returns:
      lognormal: A distribution with the given parameterization.
    """
    ...
  


