"""
This type stub file was generated by pyright.
"""

"""Computes log-ratios of probs numerically stably."""
__all__ = ['log_prob_ratio', 'RegisterLogProbRatio']
_log_prob_ratio_registry = ...
def log_prob_ratio(p, x, q, y, name=..., **kwargs):
  """Computes `p.log_prob(x) - q.log_prob(y)`, numerically stably.

  Args:
    p: A distribution instance.
    x: A tensor from the support of `p`.
    q: A distribution instance in the same family as `p`, with matching shape.
    y: A tensor from the support of `q`.
    name: Optional name for ops in this scope.
    **kwargs: Passed to the distribution's `log_prob_ratio` implementation.

  Returns:
    lp_ratio: `log (p(x) / q(y)) = p.log_prob(x) - q.log_prob(y)`. In some cases
      this will be computed with better than naive numerical precision, e.g. by
      moving the difference inside of a sum reduction.
  """
  ...

class RegisterLogProbRatio:
  def __init__(self, dist_family) -> None:
    ...
  
  def __call__(self, fn):
    ...
  


