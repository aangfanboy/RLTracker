"""
This type stub file was generated by pyright.
"""

from tensorflow_probability.python.distributions import transformed_distribution

"""LogLogistic distribution classes."""
__all__ = ['LogLogistic']
class LogLogistic(transformed_distribution.TransformedDistribution):
  """The log-logistic distribution."""
  def __init__(self, loc, scale, validate_args=..., allow_nan_stats=..., name=...) -> None:
    """Construct a log-logistic distribution.

    The LogLogistic distribution models positive-valued random variables
    whose logarithm is a logistic distribution with location `loc` and
    scale `scale`. It is constructed as the exponential
    transformation of a Logistic distribution.

    Args:
      loc: Floating-point `Tensor`; the location of the underlying logistic
        distribution(s).
      scale: Floating-point `Tensor`; the scale of the underlying logistic
        distribution(s).
      validate_args: Python `bool`, default `False`. Whether to validate input
        with asserts. If `validate_args` is `False`, and the inputs are invalid,
        correct behavior is not guaranteed.
      allow_nan_stats: Python `bool`, default `True`. If `False`, raise an
        exception if a statistic (e.g. mean/mode/etc...) is undefined for any
        batch member If `True`, batch members with valid parameters leading to
        undefined statistics will return NaN for this statistic.
      name: The name to give Ops created by the initializer.
    """
    ...
  
  @property
  def loc(self):
    """Distribution parameter of the underlying distribution."""
    ...
  
  @property
  def scale(self):
    """Distribution parameter of the underlying distribution."""
    ...
  
  experimental_is_sharded = ...


def sinc(x, name=...):
  """Calculate the (normalized) sinus cardinalis of x."""
  ...

