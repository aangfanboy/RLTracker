"""
This type stub file was generated by pyright.
"""

from tensorflow_probability.python.distributions import distribution

"""The exponentially modified Gaussian distribution class."""
__all__ = ['ExponentiallyModifiedGaussian']
class ExponentiallyModifiedGaussian(distribution.AutoCompositeTensorDistribution):
  """Exponentially modified Gaussian distribution.

  #### Mathematical details

  The exponentially modified Gaussian distribution is the sum of a normal
  distribution and an exponential distribution.
  ```none
  X ~ Normal(loc, scale)
  Y ~ Exponential(rate)
  Z = X + Y
  ```
  is equivalent to
  ```none
  Z ~ ExponentiallyModifiedGaussian(loc, scale, rate)
  ```

  #### Examples
  ```python
  tfd = tfp.distributions

  # Define a single scalar ExponentiallyModifiedGaussian distribution
  dist = tfd.ExponentiallyModifiedGaussian(loc=0., scale=1., rate=3.)

  # Evaluate the pdf at 1, returing a scalar.
  dist.prob(1.)
  ```


  """
  def __init__(self, loc, scale, rate, validate_args=..., allow_nan_stats=..., name=...) -> None:
    """Construct an exponentially-modified Gaussian distribution.

    The Gaussian distribution has mean `loc` and stddev `scale`,
    and Exponential distribution has rate parameter `rate`.

    The parameters `loc`, `scale`, and `rate` must be shaped in a way that
    supports broadcasting (e.g. `loc + scale + rate` is a valid operation).
    Args:
      loc: Floating-point `Tensor`; the means of the distribution(s).
      scale: Floating-point `Tensor`; the stddevs of the distribution(s). Must
        contain only positive values.
      rate: Floating-point `Tensor`; the rate parameter for the exponential
        distribution.
      validate_args: Python `bool`, default `False`. When `True` distribution
        parameters are checked for validity despite possibly degrading runtime
        performance. When `False` invalid inputs may silently render incorrect
        outputs.
      allow_nan_stats: Python `bool`, default `True`. When `True`, statistics
        (e.g., mean, mode, variance) use the value "`NaN`" to indicate the
        result is undefined. When `False`, an exception is raised if one or more
        of the statistic's batch members are undefined.
      name: Python `str` name prefixed to Ops created by this class.

    Raises:
      TypeError: if `loc`, `scale`, and `rate` are not all the same `dtype`.
    """
    ...
  
  @property
  def loc(self):
    """Distribution parameter for the mean of the normal distribution."""
    ...
  
  @property
  def scale(self):
    """Distribution parameter for standard deviation of the normal distribution."""
    ...
  
  @property
  def rate(self):
    """Distribution parameter for rate parameter of exponential distribution."""
    ...
  


