"""
This type stub file was generated by pyright.
"""

from tensorflow_probability.python.math.psd_kernels import positive_semidefinite_kernel as psd_kernel

"""The GammaExponential kernel."""
__all__ = ['GammaExponential']
class GammaExponential(psd_kernel.AutoCompositeTensorPsdKernel):
  """The GammaExponential kernel.

  A generalization of the `ExponentiatedQuadratic` ("squared exponential",
  "Gaussian" or "radial basis function") kernel, this kernel takes the form

    ```none
    k(x, y) = amplitude**2 * exp(
        -(||x - y||**2 / (2 * length_scale**2))**power)
    ```

  where the double-bars represent vector length (ie, Euclidean, or L2 norm).

  The `power` parameter is sometimes referred to as gamma, or as gamma / 2.
  This parameter controls the shape of the kernel.
  """
  def __init__(self, amplitude=..., length_scale=..., inverse_length_scale=..., power=..., feature_ndims=..., validate_args=..., name=...) -> None:
    """Construct an GammaExponential kernel instance.

    Args:
      amplitude: floating point `Tensor` that controls the maximum value
        of the kernel. Must be broadcastable with `length_scale`, `power`, and
        inputs to `apply` and `matrix` methods. Must be greater than zero. A
        value of `None` is treated like 1.
        Default value: None
      length_scale: floating point `Tensor` that controls how sharp or wide the
        kernel shape is. This provides a characteristic "unit" of length against
        which `||x - y||` can be compared for scale. Must be broadcastable with
        `amplitude` and inputs to `apply` and `matrix` methods. A value of
        `None` is treated like 1. Only one of `length_scale` or
        `inverse_length_scale` should be provided.
        Default value: None
      inverse_length_scale: Non-negative floating point `Tensor` that is
        treated as `1 / length_scale`. Only one of `length_scale` or
        `inverse_length_scale` should be provided.
        Default value: None
      power: Non-negative floating point `Tensor`. Must be in `(0, 1]`.
        Sometimes referred to as gamma (or, gamma / 2). `None` is treated as
        `1`, equivalent to an `ExponentiatedQuadratic` kernel.
        Default value: None
      feature_ndims: Python `int` number of rightmost dims to include in the
        squared difference norm in the exponential.
      validate_args: If `True`, parameters are checked for validity despite
        possibly degrading runtime performance
      name: Python `str` name prefixed to Ops created by this class.
    """
    ...
  
  @property
  def amplitude(self):
    """Amplitude parameter."""
    ...
  
  @property
  def length_scale(self):
    """Length scale parameter."""
    ...
  
  @property
  def inverse_length_scale(self):
    """Inverse length scale parameter."""
    ...
  
  @property
  def power(self):
    """Power (gamma) parameter."""
    ...
  


