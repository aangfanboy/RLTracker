"""
This type stub file was generated by pyright.
"""

from tensorflow_probability.python.math.psd_kernels import positive_semidefinite_kernel as psd_kernel

"""Matern kernels."""
__all__ = ['GeneralizedMatern', 'MaternOneHalf', 'MaternThreeHalves', 'MaternFiveHalves']
class _AmplitudeLengthScaleMixin:
  """Shared logic for amplitude/length_scale parameterized kernels."""
  @property
  def amplitude(self):
    """Amplitude parameter."""
    ...
  
  @property
  def length_scale(self):
    """Length scale parameter."""
    ...
  
  @property
  def inverse_length_scale(self):
    """Inverse length scale parameter."""
    ...
  


class GeneralizedMatern(_AmplitudeLengthScaleMixin, psd_kernel.AutoCompositeTensorPsdKernel):
  """Generalized Matern Kernel.

  This kernel parameterizes the Matern family of kernels.

  The kernel has the following form:

  ```none
    k(x, y) = amplitude ** 2 * 2 ** (1 - v) / Gamma(v) * s ** v * K(v, s)
  ```
  where
    * `s` is `sqrt(2 * v) * d / l`.
    * `v` is the degrees of freedom parameter `df`.
    * `d` is the Euclidean distance `||x - y||**2`.
    * `l` is the `length_scale`.
    * `K(v, s)` is the Modified Bessel function of the second kind.

  where the double-bars represent vector length (i.e. Euclidean, or L2 Norm).
  This kernel, acts over the space `S = R^(D1 x D2 .. x Dd)`.

  Warning: Gradients are not available with respect to the `df` parameter.
  Warning: It is recommended that for `df = 0.5, 1.5, 2.5` to use the
  specialized kernels `MaternOneHalf`, `MaternThreeHalves` and
  `MaternFiveHalves` instead.
  """
  def __init__(self, df, amplitude=..., length_scale=..., inverse_length_scale=..., feature_ndims=..., validate_args=..., name=...) -> None:
    ...
  
  @property
  def df(self):
    """Degree of Freedom parameter."""
    ...
  


class MaternOneHalf(_AmplitudeLengthScaleMixin, psd_kernel.AutoCompositeTensorPsdKernel):
  """Matern Kernel with parameter 1/2.

  This kernel is part of the Matern family of kernels, with parameter 1/2.
  Also known as the Exponential or Laplacian Kernel, a Gaussian process
  parameterized by this kernel, is also known as an Ornstein-Uhlenbeck process
  (https://en.wikipedia.org/wiki/Ornstein%E2%80%93Uhlenbeck_process).

  The kernel has the following form:

  ```none
    k(x, y) = amplitude ** 2  * exp(-||x - y|| / length_scale)
  ```

  where the double-bars represent vector length (i.e. Euclidean, or L2 Norm).
  This kernel, acts over the space `S = R^(D1 x D2 .. x Dd)`.
  """
  def __init__(self, amplitude=..., length_scale=..., inverse_length_scale=..., feature_ndims=..., validate_args=..., name=...) -> None:
    """Construct a MaternOneHalf kernel instance.

    Args:
      amplitude: Positive floating point `Tensor` that controls the maximum
        value of the kernel. Must be broadcastable with `length_scale` and
        inputs to `apply` and `matrix` methods. A value of `None` is treated
        like 1.
      length_scale: Positive floating point `Tensor` that controls how sharp or
        wide the kernel shape is. This provides a characteristic "unit" of
        length against which `||x - y||` can be compared for scale. Must be
        broadcastable with `amplitude` and inputs to `apply` and `matrix`
        methods. A value of `None` is treated like 1.
      inverse_length_scale: Non-negative floating point `Tensor` that is
        treated as `1 / length_scale`. Only one of `length_scale` or
        `inverse_length_scale` should be provided.
        Default value: None
      feature_ndims: Python `int` number of rightmost dims to include in the
        squared difference norm in the exponential.
      validate_args: If `True`, parameters are checked for validity despite
        possibly degrading runtime performance
      name: Python `str` name prefixed to Ops created by this class.
    """
    ...
  


class MaternThreeHalves(_AmplitudeLengthScaleMixin, psd_kernel.AutoCompositeTensorPsdKernel):
  """Matern Kernel with parameter 3/2.

  This kernel is part of the Matern family of kernels, with parameter 3/2.

  ```none
    z = sqrt(3) * ||x - y|| / length_scale
    k(x, y) = amplitude ** 2 * (1 + z) * exp(-z)
  ```

  where the double-bars represent vector length (i.e. Euclidean, or L2 Norm).
  This kernel, acts over the space `S = R^(D1 x D2 .. x Dd)`.
  """
  def __init__(self, amplitude=..., length_scale=..., inverse_length_scale=..., feature_ndims=..., validate_args=..., name=...) -> None:
    """Construct a MaternThreeHalves kernel instance.

    Args:
      amplitude: Positive floating point `Tensor` that controls the maximum
        value of the kernel. Must be broadcastable with `length_scale` and
        inputs to `apply` and `matrix` methods. A value of `None` is treated
        like 1.
      length_scale: Positive floating point `Tensor` that controls how sharp or
        wide the kernel shape is. This provides a characteristic "unit" of
        length against which `||x - y||` can be compared for scale. Must be
        broadcastable with `amplitude`, and inputs to `apply` and `matrix`
        methods. A value of `None` is treated like 1.
      inverse_length_scale: Non-negative floating point `Tensor` that is
        treated as `1 / length_scale`. Only one of `length_scale` or
        `inverse_length_scale` should be provided.
        Default value: None
      feature_ndims: Python `int` number of rightmost dims to include in the
        squared difference norm in the exponential.
      validate_args: If `True`, parameters are checked for validity despite
        possibly degrading runtime performance
      name: Python `str` name prefixed to Ops created by this class.
    """
    ...
  


class MaternFiveHalves(_AmplitudeLengthScaleMixin, psd_kernel.AutoCompositeTensorPsdKernel):
  """Matern 5/2 Kernel.

  This kernel is part of the Matern family of kernels, with parameter 5/2.

  ```none
    z = sqrt(5) * ||x - y|| / length_scale
    k(x, y) = amplitude ** 2 * (1 + z + (z ** 2) / 3) * exp(-z)
  ```

  where the double-bars represent vector length (i.e. Euclidean, or L2 Norm).
  This kernel, acts over the space `S = R^(D1 x D2 .. x Dd)`.
  """
  def __init__(self, amplitude=..., length_scale=..., inverse_length_scale=..., feature_ndims=..., validate_args=..., name=...) -> None:
    """Construct a MaternFiveHalves kernel instance.

    Args:
      amplitude: Positive floating point `Tensor` that controls the maximum
        value of the kernel. Must be broadcastable with `length_scale` and
        inputs to `apply` and `matrix` methods. A value of `None` is treated
        like 1.
      length_scale: Positive floating point `Tensor` that controls how sharp or
        wide the kernel shape is. This provides a characteristic "unit" of
        length against which `||x - y||` can be compared for scale. Must be
        broadcastable with `amplitude`, and inputs to `apply` and `matrix`
        methods. A value of `None` is treated like 1.
      inverse_length_scale: Non-negative floating point `Tensor` that is
        treated as `1 / length_scale`. Only one of `length_scale` or
        `inverse_length_scale` should be provided.
        Default value: None
      feature_ndims: Python `int` number of rightmost dims to include in the
        squared difference norm in the exponential.
      validate_args: If `True`, parameters are checked for validity despite
        possibly degrading runtime performance
      name: Python `str` name prefixed to Ops created by this class.
    """
    ...
  


