"""
This type stub file was generated by pyright.
"""

from tensorflow_probability.python.bijectors import bijector as bijector_lib

"""Bijectors for distributed computations."""
JAX_MODE = ...
class Sharded(bijector_lib.Bijector):
  """A meta-bijector meant for use in an SPMD distributed context.

  `Sharded` is a meta-bijector that enables distributions to be used in SPMD
  programs. A `Sharded` bijector represents a bijector which acts on elements
  are split across a set of devices. The number of shards is the number of
  devices in the current TensorFlow DistributionStrategy or the provided JAX
  pmap axis.
  """
  def __init__(self, bijector, *, shard_axis_name, name=...) -> None:
    """Constructs a `Sharded` bijector.

    Args:
      bijector: The base bijector instance to transform. Typically an instance
        of `Bijector`.
      shard_axis_name: `str` for axis name for use in JAX backend.
      name: The name for ops managed by the distribution.
        Default value: `None` (i.e., `'Sharded' + bijector.name`).
    """
    ...
  
  @property
  def bijector(self): # -> Any:
    ...
  
  @property
  def shard_axis_name(self): # -> Any:
    ...
  


