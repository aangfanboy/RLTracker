"""
This type stub file was generated by pyright.
"""

import tensorflow.compat.v2 as tf

"""Base classes for building neural networks."""
__all__ = ['Layer', 'Sequential']
class Layer(tf.Module):
  """A `callable` `tf.Module`."""
  def __init__(self, also_track=..., validate_args=..., name=...) -> None:
    ...
  
  @property
  def also_track(self): # -> list[Any]:
    ...
  
  @property
  def validate_args(self): # -> bool:
    """Python `bool` indicating possibly expensive checks are enabled."""
    ...
  
  def summary(self): # -> LiteralString:
    ...
  
  def save(self, filename): # -> None:
    ...
  
  def load(self, filename):
    ...
  
  def __repr__(self): # -> str:
    ...
  


class Sequential(Layer):
  """A `Layer` characterized by iteratively given functions."""
  def __init__(self, layers, also_track=..., validate_args=..., name=...) -> None:
    ...
  
  def set_trace(self, trace): # -> Self:
    ...
  
  @property
  def layers(self): # -> tuple[Any, ...]:
    ...
  
  def __call__(self, inputs, **kwargs): # -> Sequential:
    ...
  
  def __getitem__(self, i): # -> Sequential:
    ...
  


class KernelBiasLayer(Layer):
  """Linear layer."""
  def __init__(self, kernel, bias, apply_kernel_fn, activation_fn=..., dtype=..., validate_args=..., name=...) -> None:
    ...
  
  @property
  def dtype(self):
    ...
  
  @property
  def kernel(self): # -> Any:
    ...
  
  @property
  def bias(self): # -> Any:
    ...
  
  @property
  def activation_fn(self): # -> None:
    ...
  
  def __call__(self, x):
    ...
  


